[{"authors":["admin"],"categories":null,"content":"Juntao is an undergradutate student who major in Computer Science And Engineering in the CUHK(SZ). He earned reputations such as the third class scholarships, dean-list, undergraduate student research awards in campus, also certificates like Second class of National Mathematical Contest In Modeling of China, H hounour for the Mathematical Contest In Modeling of USA.\nHe has a good sense for the research. He participate in the robotics lab at the year 1 and already maintained a three-year research experience. He recently publish his first paper on the ACM-BSCI. His coding skills including data analysis, system modeling and game development. He also earned the second price of the development award for the Wechat Mini App at the south China and the participate in various game development festivals. One of the game demo.\n Cumulative GPA(cGPA) 3.695/4.000 Major GPA(mGPA) 3.804/4.000 Ranking 8/128 (for both cgpa and mgpa) TOEFL 101  ","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"http://www.zhaojuntao.site/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Juntao is an undergradutate student who major in Computer Science And Engineering in the CUHK(SZ). He earned reputations such as the third class scholarships, dean-list, undergraduate student research awards in campus, also certificates like Second class of National Mathematical Contest In Modeling of China, H hounour for the Mathematical Contest In Modeling of USA.\nHe has a good sense for the research. He participate in the robotics lab at the year 1 and already maintained a three-year research experience.","tags":null,"title":"","type":"authors"},{"authors":[],"categories":[],"content":"","date":1603517895,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1603517895,"objectID":"97e6918d795e8e2f0e8b0368097e7000","permalink":"http://www.zhaojuntao.site/publication/cloud-arcade/","publishdate":"2020-10-24T13:38:15+08:00","relpermalink":"/publication/cloud-arcade/","section":"publication","summary":"By rendering game scenes on the remote cloud and delivering real-time video to end devices via the Internet, cloud gaming enables players to access game services anytime anywhere despite the hardware capacity of their terminals. However, as a commercial service, the state-of-the-art payment models for cloud gaming are still in their preliminary stages. In this paper, we reveal the shortages of existing cloud gaming pricing models and propose CloudArcade, a token-based cloud gaming system that employs blockchain-empowered cryptocurrency as a payment method for the players using the cloud gaming services. By using cryptocurrency, CloudArcade provides a transparent and resource-aware pricing method, it also enables a time irrelevant silent payment on the floating price to protects users' payment. These features eliminate the quality of experience degradation caused by the spot price in the traditional dynamic pricing model on the QoE-aware service pricing. We also employ the payment channel in CloudArcade to improve the system performance. Discussions on service pricing criteria are put forward, open issues about token issuing and malicious resource speculation are also reviewed. We believe the design of CloudArcade can show a good generality on other QoE-aware and human-centered applications.","tags":[],"title":"CloudArcade: A Blockchain Empowered Cloud Gaming System","type":"publication"},{"authors":[],"categories":[],"content":"HTTP的缺点  明文通信，可能被窃听  抓取互联网上流动的数据包：抓包 packet Capture 或者嗅探器 Sniffer 工具 用SSL建立安全的通信线路   不验证身份，可能遭伪装  服务器可以伪装 无意义的请求也照单全收 DNS SSL 可以查明对手证书   无法验证报文完整，可能丢失  man in middle attack MD5 和 SHA，数字签名   HTTP+通信加密+证书+完整性保护 = HTTPS  HTTPS  https 应用层和 TCP/IP 之间加了一层 SSL 密钥发送问题  发送密钥：有窃听风险 不发送：对方不能解密 正确发送：那内容也能发送了 所以非对称  发送密文的用对方的公开密钥进行加密 对方用自己的私钥进行解密 但是恢复原文是非常困难的   HTTPS 使用混合加密  确保共享密钥安全后使用共享密钥      证书 保证 public key 的正确性\n 使用证书证明公开密钥的正确性 CA EV SSL 保证web服务的标准  防止钓鱼攻击    HTTPS 通信  Client:HandShake:Client Hello Server  HandShake:Server Hello HandShake:Certificate HandShake:Server Hello Done (End signal)   CLient  Client key Exchange. Pre master encrypted Change Cipher Spec. The info after this will use premaster secret to encrypt Finished: 所有的报文的校验都在里面。这次握手协商能够成功，要以服务器能否正确解密作为判断   Server  Change Cipher Spec Finished   SSL 到此建立完成 APP data in and out (HTTP)  with MAC(message authentication code) 防篡改   close notify  HTTPS 坏处  变慢 高耗能  认证 HTTP 的认证方式\n BASIC 认证  发送请求，401， 用户ID和密码以 Base64 返回 认证成功返回200 被盗可能性极高，并且难以注销   DIGEST 认证  发送质询码。从而改变加密后的文字 无法防止用户伪装    SSL 客户端认证   ","date":1581824184,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581824184,"objectID":"abdde7ca6874557441794d89806c1b3b","permalink":"http://www.zhaojuntao.site/post/web4/","publishdate":"2020-02-16T11:36:24+08:00","relpermalink":"/post/web4/","section":"post","summary":"HTTP 的缺点 HTTPS","tags":[],"title":"web4","type":"post"},{"authors":[],"categories":["学习笔记"],"content":"服务器 服务器通过虚拟主机实现多伺\n通信数据转发程序  代理  接受客户端发送的请求并转发给服务器 同时也接收服务器返回的响应并发给客户端   网关  转发启发服务器通信数据的服务器 能处理客户端的请求   隧道  中转，保证远距离客户端和服务器的通信    代理  每次通过代理服务器转发请求或者响应时，会追加写入 Via 信息 缓存代理 caching proxy  会将资源副本缓存在代理服务器上   透明代理 transparent proxy  不对报文做任何加工的代理类型叫做透明代理 对报文类型进行加工的叫做非透明代理    网关  网关提供了HTTP至非HTTP协议服务的转换，提高了通信的安全性  隧道  隧道的目的是保证客户端和服务器的安全通信 使用 SSL 等通信手段 隧道本身不解析 HTTP 请求 隧道会在通信断开后结束  HTTP 首部  字段结构  首部字段名和字段值，中间用冒号分割 字段可以对应多个值   Content-Type: 报文主体的对象类型  首部字段类型 通用首部字段  Cache-Control  public: 其他用户也可以利用缓存 private: 服务器向特定用户提供缓存 no-cache  防止从缓存中获取过期资源 直接把请求转给服务器 no-cache=Location 指定数值，只有在没收到时使用缓存   no-store  响应中应包含机密信息，不能缓存   maxage  判断资源缓存时间，如果超过则直接发给服务器不缓存   min-fresh  要求缓存服务器返回未过指定时间的缓存   max-stale  可指示缓存资源   on-if-cached no-transform 防止内容更改 拓展   Connection  控制不再转发给代理的首部字段，管理持久链接 默认 connection keep-alive, close 则关闭   Date HTTP 报文的时间 Progma 1.1 向后兼容 Trailer: 记录报文主体后记录了哪些首部字段 Transfer-Encoding: 规定了传输报文主体的编码方式 Upgrade： 检测能否使用更高的通信协议 Via：用来追踪传输路径（经过代理添加） Warning：缓存相关问题的警告 请求首部字段  accept: 通知服务器用户代理能够处理的媒体类型。可一次指定多个  文本文件  text/html, application/xhtml   图片文件  image/jpeg   视频文件  video/mpeg   应用程序二进制  application/octet-stream     q 表示相对优先级 accept-charset accept-encoding accept-language authorization expect  Expect:100-continue 希望出现某些特定行为 Failed : 417 exception failed   From Host  必须请求 主要对付单台服务器设置多个域名的情况 相同的 ip 地址下部署着多个域名 服务器无法响应是哪个域名对应的请求，直接发送一个空值   if 条件请求  match  Etag match 才处理请求 not match, precondition failed   non-match modified-since  如果资源在日期之后发生了改变，服务器接受请求 如果没有更新则报 304   unmodified-since range  如果 Etag 相同，则范围请求 否则返回全部资源   max-forward  每一层 -1   Referer  知道请求从哪个 web 页面发起   User-agent  浏览器种类 响应首部字段      Accept-Ranges Age: 服务器在多久前创建了响应 Etag：实体标识，服务器为每份都有对应实体标识  例如，中英 URI 相同，但 Etag 不同 强 Etag 值  不管多么细微的变化都会改变值   弱 Etag 只有资源产生改变，才会改变  此时会在Etag 前加 W/     Location： 引导到与请求 URI 不同的资源位置 retry-after: 告知多久后可以重发。可以指定时间或者秒。 server：服务器 HTTP 应用程序的信息 Vary：控制缓存，返回弱首部字段相同 实体首部字段  allow:GET HEAD Content-Encoding Content-Length Content-Location Content-MD5: 一段由 MD5 生成的值，确认content 是否完整  对HTTP MD5 生成 128二进制，再 Base64 写入   Content-Range  针对范围请求，返回范围内容   Content-Type: html/text;charset=utf-8 Expire: 资源失效日期 Last Modified： 最后修改日期 非HTTP字段 Cookie, Set Cookie, etc. RFC6265 Set-Cookie 响应首部  expires 指定有效期  一旦发送 Cookie，服务器端就不能删除，但是可以通过显式覆盖的方式   path 指定文件目录 domain 指定发送 cookie 的目录和结尾匹配一致 secure 指定 HTTPS 才能发送 cookie HTTP-only 防止js脚本获得cookie，防止XSS   Cookie 请求首部  Cookie： status = true   XFrame-Option  Deny / SAMEORIGIN 防止其他网站中的 Frame 显示问题，防止劫持   X-XSS-Proection:1  0 无效状态 1 有效状态   DNT do not track  个人信息 0 同意被追踪 1 不同意被追踪   P3P 将个人隐私转换成仅程序可以理解的部分  ","date":1581662652,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581662652,"objectID":"d0b2dee39c41895fb5be84d29221f4df","permalink":"http://www.zhaojuntao.site/post/web3/","publishdate":"2020-02-14T14:44:12+08:00","relpermalink":"/post/web3/","section":"post","summary":"Web Server, HTTP 首部","tags":["学习笔记","网络"],"title":"Web C3","type":"post"},{"authors":[],"categories":["学习笔记"],"content":"使用 HTTP 必然存在客户端和服务端\n通过请求和响应完成通信 请求报文\n method + URI（资源对象） + HTTP （协议版本号） OPTIONS * HTTP/1.1 来查询HTTP服务器支持的方法 响应报文   HTTP 是不保存状态的协议  HTTP/1.1 是无状态协议但是引入了 cookie 从而实现状态管理  HTTP 方法们  GET  访问已被服务器识别的资源   POST  传输实体主体   PUT  传输文件 1.1 不带验证机制，所以任何人都能上传   HEAD  获取首部   DELETE  删除，和PUT一样没有验证   1.1 only  OPTIONS  询问方法   TRACE  用来追踪修改，基本用不着   CONNECT  建立通信隧道，代理服务器链接 SSL（secure sockets layer 安全套接层） TLS （Transport layer security 传输层安全）     1.0 LINK and UNLINE  持久链接和管线化  1.1 默认使用持久连接 管线化是不等待响应直接发送下一个请求  使用Cookie的状态管理  Cookie 会根据从服务器端发送的响应报文内的一个叫做 Set-Cookie 的首部字段信息，通知客户端保存 Cookie 下次发送请求时，客户端会自动在请求报文中加入 Cookie 值发送出去   HTTP 报文 HTTP 报文本身是由多行数据组成的字符串文本\n 报文首部  请求或需响应的内容和属性   空行 CR + LF （carrier return 回车符 and line feed 换行符） 报文主体  发送的数据    报文和主体的差异  报文是 message HTTP 的基本单位，由八位字节流组成  HTTP 报文的主体常用来传输实体主体   实体 entity 作为请求或者响应的有效载荷数据。  实体由实体首部和实体主体组成 通常，报文主体和实体主体相同，如果传输进行编码操作，则报文主体和实体主体不同。    编码  内容编码  压缩传输  运用在实体内容上，并保持实体信息压缩 内容编码后的实体由客户端接受并负责解码   常见的有以下几种  gzip （GNU zip） compress （UNIX） deflate （zlib） identity （不进行编码）     分块传输编码  每一块都会标记大小 主体最后一块用 0 标记   发送多种数据的多部分对象集合  例如邮件：文字+文件  邮件使用了 MIME （multipurpose internet mail extensions） 和多部分对象集合 Multipart   HTTP 也用了 Multipart，包含的对象如下  multipart/form-data: web 表单上传 multipart/byteranges: 状态码 206（部分文件）的响应报文包含多个范围的内容时使用 multipart/form      获取部分内容的范围请求  文件能够从中断处回复下载  指定下载的实体范围，范围请求   使用 Content-Range 指定范围 针对范围请求，响应会范围状态206的 Partial Content 的响应报文  内容协商 Content negotiation  例如根据浏览器的默认语言返回不同的界面 请求报文中的首部字段就是判断的基准 内容协商有三种类型  服务器驱动协商 server-driven: 以请求的首部字段为参考，在服务器自动处理 客户端驱动协商 agent-driven: 从浏览器的可选列表中手动选择 透明协商 transparent-driven: 结合协商    HTTP 状态码  2XX  200 OK 204 No Content : 处理成功但是没有主体返回（无资源）  使用于客户端向服务端发送，但是服务端不用反应   206 Partial Content: 返回部分   3XX  301 Moved permanently: 请求的资源已经被分配了新的 URI 302 Found: 临时性重定向，请求资源的URI被改动但是仍然可能被改动 303 See Other: 同302，但提示应用 GET，比如POST会改成 GET 304 Not modified: 资源请求不符合条件 307 Temporary redirect: 同302，但是不会从 POST 改 GET   4XX  400 Bad Request: 请求报文存在语法错误，应修改请求重新发送。浏览器会和200一样对待 401 Unauthorized  两次，第一次401请求认证信息，第二次401报未认证   403 Forbidden: 拒绝访问 404 Notfound: 无法找到请求的资源   5XX  500 Internal Server Error:服务器故障 503 service unavailable: 服务器超负荷或者停机维护中    ","date":1581604684,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581604684,"objectID":"e0aba4c94502804c014717282edc6ebe","permalink":"http://www.zhaojuntao.site/post/web2/","publishdate":"2020-02-13T22:38:04+08:00","relpermalink":"/post/web2/","section":"post","summary":"HTTP 方法，Cookie，报文，编码，状态码","tags":["学习笔记","网络"],"title":"Web Chapter2-3 HTTP","type":"post"},{"authors":[],"categories":[],"content":"Dogs Vs Cats  Code. Competition Notes  os.symlink softlink (quick access)    Titanic  Codes  ","date":1581599896,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581599896,"objectID":"9aa2931cb4f63983a92a5fb3f9627a25","permalink":"http://www.zhaojuntao.site/post/kaggle/","publishdate":"2020-02-13T21:18:16+08:00","relpermalink":"/post/kaggle/","section":"post","summary":"Dogs Vs Cats  Code. Competition Notes  os.symlink softlink (quick access)    Titanic  Codes  ","tags":[],"title":"Kaggle","type":"post"},{"authors":[],"categories":["学习笔记"],"content":"HTTP（超文本传输协议） web 建立在 HTTP 上进行通信\n三项 WWW 构建技术  HTML 页面文本标记语言  将 SGML（标准通用标记语言）作为页面   HTTP 文档传递协议  HTTP/1.0 是主流的协议版本   URL 指定文档所在地址  网络基础 TCP/IP  设备通信需要相同的规则，这被称为协议。 tcp/ip 是互联网相关的各类协议族的总称  网络包括 WWW 以 TCP/IP 为基础运作，HTTP 属于其内部子集。    分层管理 TCP/IP 分为应用层/传输层/网络层和数据链接层\n 应用层  向用户提供应用服务时通信的活动 预存了各类通用的应用服务： FTP(File transfer protocol) 文件传输协议， DNS（Domain name system） 域名系统服务 HTTP 协议处在该层   传输层  提供处于网络连接中的两台计算机的数据传输 TCP(transmission control protocol) 传输控制协议, UDP(user data protocol) 用户数据报协议   网络层  处理在网络上流动的数据包。数据包是网络传输的最小单位。 该层规定（选择）了传输路线   链路层  硬件部分    例子  客户端在应用层发出 HTTP 请求 传输层把HTTP请求报文（数据）进行分割，并打上标记和端口号 网络层（IP 协议） 增加作为通信目的地的 Mac 地址 发送端每一层在传输时会打上首部信息，接收端会去掉。（封装）  IP / TCP / DNS IP  IP(internet protocol)位于网络层. IP 是一种协议的名称，和IP地址不同。 保证数据传输需要 IP 和 MAC  IP 指明了节点被分配到的地址 MAC 是网卡所属的固定地址 IP 可换，MAC 基本不会改   IP 通信依赖MAC，会用使用中转设备寻找目标  使用 ARP （address resolution protocol）来解析 ip 获得 mac 中转设备不确定，使用路由选择，因此不知道具体细节    TCP  TCP 属于传输层，提供字节流服务  byte stream service 将大块数据分割成 segment tcp 分割数据并确保数据最终传达   三次握手(three-way shaking)  使用了 TCP 的标志（flag） SYN（synchronize） 和 ACK (acknowledgement) 发送 SYN / 返回 SYN/ACK / 发送 ACK     DNS  位于应用层，提供域名到 ip 的解析服务  URL / URI  URI uniform resource identifier  HTTP 的协议方案是 http   URI用字符串标识某一资源，URL标示资源地点（互联网上的位置）  URI 格式  协议类型，字母区分大小写，最后加： 登录信息，可选项 服务器地址，可ipv4 or v6 [0:0:0:0:0:0:0:1] 端口号 带层次的文件路径 查询字符串 片段标识符：子资源  不遵照 RFC 标准的服务无法被访问\n","date":1581568968,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581568968,"objectID":"129af89fb2861ab6c9738db321d20304","permalink":"http://www.zhaojuntao.site/post/web/","publishdate":"2020-02-13T12:42:48+08:00","relpermalink":"/post/web/","section":"post","summary":"基础知识介绍 TCP/IP DNS URL/URI","tags":["学习笔记","网络"],"title":"Web 学习笔记1","type":"post"},{"authors":[],"categories":[],"content":"After experiment on the gitbook, docify, we still choose hugo for documentation. The scene use for documentation is book.\nCreate Site Create site and add theme\nhugo new site mydocs; cd mydocs git init git submodule add https://github.com/alex-shpak/hugo-book themes/book cp -R themes/book/exampleSite/content . hugo server --minify --theme book  All the related information could be found in example page.\n","date":1581565040,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581565040,"objectID":"81008181c9044cde4271e025a4fe6746","permalink":"http://www.zhaojuntao.site/post/hugo-book/","publishdate":"2020-02-13T11:37:20+08:00","relpermalink":"/post/hugo-book/","section":"post","summary":"After experiment on the gitbook, docify, we still choose hugo for documentation. The scene use for documentation is book.\nCreate Site Create site and add theme\nhugo new site mydocs; cd mydocs git init git submodule add https://github.com/alex-shpak/hugo-book themes/book cp -R themes/book/exampleSite/content . hugo server --minify --theme book  All the related information could be found in example page.","tags":[],"title":"Hugo Book","type":"post"},{"authors":[],"categories":[],"content":"Creation of Content hugo new --kind post post/my-article-name hugo new --kind project project/my-project-name hugo new --kind talk talk/my-talk-name hugo new --kind publication publication/\u0026lt;my-publication\u0026gt;  Content Edit ","date":1581561689,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581561689,"objectID":"571cda260aee903f477a2e35ab1ff1a8","permalink":"http://www.zhaojuntao.site/post/hugo-use/","publishdate":"2020-02-13T10:41:29+08:00","relpermalink":"/post/hugo-use/","section":"post","summary":"Summary of this post","tags":[],"title":"Hugo Use","type":"post"}]